{"version":3,"sources":["components/jumbotron/jumbotron.jsx","components/carousel/carousel.jsx","components/album/album.jsx","components/authorAlbumsList/albumsList.jsx","components/authorsList/authorsList.jsx","App.js","index.js"],"names":["Jumbotron","Carousel","photos","showCarousel","setShowCarousel","currentPicture","albumPictureIndex","numCurrentPicture","numAlbumPictureIndex","parseInt","useState","currentIndex","setCurrentIndex","currentPictureIndex","setCurrentPictureIndex","useEffect","className","filter","photo","id","map","item","key","length","type","onClick","previousPicture","nextPicture","src","url","alt","title","photosCount","Album","authorName","albumTitle","showAlbum","setShowAlbum","setCurrentPicture","setAlbumPictureIndex","index","e","event","target","selectedPicture","thumbnailUrl","AlbumsList","albums","showAlbumsList","setShowAlbumsList","selectedAlbum","setSelectedAlbum","setPhotos","setAlbumTitle","album","selectAlbum","AuthorsList","authors","selectedAuthor","setSelectedAuthor","setAlbums","setAuthorName","author","Fragment","selectedAuthorId","name","handleTargetAuthor","App","setAuthors","Promise","all","fetch","then","value","json","newAuthors","userId","albumId","catch","err","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAWeA,G,MARG,WACd,OACI,gCACI,gD,wBCHG,SAASC,EAAT,GAA+F,IAA5EC,EAA2E,EAA3EA,OAAQC,EAAmE,EAAnEA,aAAcC,EAAqD,EAArDA,gBAAiBC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,kBAEjFC,GAAqBF,EACrBG,EAAuBC,SAASH,GAAqB,EAHgD,EAInEI,mBAASH,GAJ0D,mBAIpGI,EAJoG,KAItFC,EAJsF,OAKrDF,mBAASF,GAL4C,mBAKpGK,EALoG,KAK/EC,EAL+E,KAYzG,OALAC,qBAAU,WACNH,EAAgBL,GAChBO,EAAuBN,KACxB,CAACD,EAAmBC,IAEhBL,GACH,oCACI,yBAAKa,UAAU,uBAEPd,EAAOe,QAAO,SAAAC,GAAK,OAAIA,EAAMC,KAAOR,KAAcS,KAC9C,SAAAC,GAAI,OACA,4BAAQF,GAAIE,EAAKF,GAAIG,IAAKD,EAAKF,GAAIH,UAAU,iBACzC,yBAAKA,UAAU,UAAUH,EAAzB,MAAiDX,EAAOqB,QACxD,4BAAQC,KAAK,SAASR,UAAU,QAAQS,QAAS,kBAAMrB,GAAgB,KAAvE,KAEA,4BAAQoB,KAAK,SAASR,UAAU,OAAOS,QAASC,GAAhD,UACA,4BAAQF,KAAK,SAASR,UAAU,OAAOS,QAASE,GAAhD,UACA,yBAAKC,IAAKP,EAAKQ,IAAKC,IAAKT,EAAKF,KAC9B,oCAAaE,EAAKU,aAQ9C,SAASJ,IACL,IAAMK,EAAc9B,EAAOqB,OAC3BZ,MACAE,EAC0BmB,IACtBpB,EAAgBD,EAAeT,EAAO,GAAGiB,IACzCL,EAAuBD,EAAsB,IAEjDD,EAAgBD,GAChBG,EAAuBD,GAG3B,SAASa,IACL,IAAMM,EAAc9B,EAAOqB,OAC3BZ,IAE4B,MAD5BE,IAEID,EAAgBD,EAAeT,EAAO8B,EAAc,GAAGb,IACvDL,EAAuBD,EAAsBmB,IAEjDpB,EAAgBD,GAChBG,EAAuBD,ICrDhB,SAASoB,EAAT,GAA2E,IAA3D/B,EAA0D,EAA1DA,OAAQgC,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,aAAe,EAE7C3B,oBAAS,GAFoC,mBAE9EP,EAF8E,KAEhEC,EAFgE,OAGzCM,mBAAS,GAHgC,mBAG9EL,EAH8E,KAG9DiC,EAH8D,OAInC5B,mBAAS,GAJ0B,mBAI9EJ,EAJ8E,KAI3DiC,EAJ2D,KAMrF,OAAOH,GACH,yBAAKjB,GAAG,QAAQH,UAAU,mBACtB,4BAAQG,GAAG,WAAWK,KAAK,SAASC,QAAS,WACzCY,GAAa,KADjB,uBAMA,wBAAIlB,GAAIe,EAAYlB,UAAU,UAC1B,sCADJ,OACyBkB,GAEzB,wBAAIf,GAAIgB,GACJ,qCADJ,OACwBA,GAGxB,wBAAInB,UAAU,SACTd,EAAOkB,KAAI,SAACF,EAAOsB,GAAR,OACR,wBAAIrB,GAAID,EAAMC,GAAIG,IAAK,OAASJ,EAAMC,GAClCM,QAAS,SAACgB,GAAD,OAgB7B,SAAyBC,GACrB,IAAMrC,EAAiBqC,EAAMC,OAAOxB,GAC9Bb,EAAoBoC,EAAMC,OAAOb,IAIvC,OAHA1B,GAAgB,GAChBkC,EAAkBjC,GAClBkC,EAAqBjC,GACd,CAACD,iBAAgBC,qBAtBQsC,CAAgBH,KAEhC,4BAAQzB,UAAU,iBACd,yBAAKY,IAAKV,EAAM2B,aAAc1B,GAAID,EAAMC,GAAIW,IAAKU,IACjD,oCAAY,+BAAQtB,EAAMa,cAM1C,kBAAC9B,EAAD,CAAUC,OAAQA,EAAQC,aAAcA,EAAcC,gBAAiBA,EAC7DC,eAAgBA,EAChBC,kBAAmBA,KCpC1B,SAASwC,EAAT,GAA8E,IAAzDZ,EAAwD,EAAxDA,WAAYa,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,kBAAoB,EAEtDvC,oBAAS,GAF6C,mBAEjF0B,EAFiF,KAEtEC,EAFsE,OAG9C3B,mBAAS,GAHqC,mBAGjFwC,EAHiF,KAGlEC,EAHkE,OAI5DzC,mBAAS,IAJmD,mBAIjFR,EAJiF,KAIzEkD,EAJyE,OAKpD1C,mBAAS,IAL2C,mBAKjFyB,EALiF,KAKrEkB,EALqE,KAOxF,OAAOL,GACH,yBAAK7B,GAAG,cAAcH,UAAU,mBAC5B,4BAAQG,GAAG,WAAWK,KAAK,SAASC,QAAS,WACzCwB,GAAkB,KADtB,SAMA,wBAAI9B,GAAIe,EAAYlB,UAAU,UAC1B,sCADJ,OACyBkB,GAGzB,wBAAIf,GAAG,aAAaH,UAAU,SACzB+B,EAAO3B,KAAI,SAAAkC,GAAK,OACb,wBAAIhC,IAAKgC,EAAMnC,GAAIA,GAAImC,EAAMnC,IACzB,4BAAQH,UAAU,iBACd,yBAAKG,GAAImC,EAAMnC,GAAIS,IAAK0B,EAAMpD,OAAO,GAAG2C,aAAcf,IAAKwB,EAAMpD,OAAO,GAAGiB,GACtEM,QAAS8B,IACd,oDACoBD,EAAMvB,MACtB,2BAAIuB,EAAMpD,OAAOqB,OAAjB,oBAQpB,kBAACU,EAAD,CAAO/B,OAAQA,EAAQgC,WAAYA,EAAYC,WAAYA,EAAYC,UAAWA,EAC3EC,aAAcA,EACda,cAAeA,KAI9B,SAASK,EAAYb,GACjB,IAAMQ,EAAgBR,EAAMC,OAAOxB,GACnCkB,GAAa,GACbc,EAAiBD,GACjB,IAAMI,EAAQP,EAAO9B,QAAO,SAAAqC,GAAK,OAAIA,EAAMnC,MAAQ+B,KAAe,GAGlE,OAFAE,EAAUE,EAAMpD,QAChBmD,EAAcC,EAAMvB,OACbmB,GChDA,SAASM,EAAT,GAAiC,IAAXC,EAAU,EAAVA,QAAU,EAEC/C,oBAAS,GAFV,mBAEpCsC,EAFoC,KAEpBC,EAFoB,OAGCvC,mBAAS,GAHV,mBAGpCgD,EAHoC,KAGpBC,EAHoB,OAIfjD,mBAAS,IAJM,mBAIpCqC,EAJoC,KAI5Ba,EAJ4B,OAKPlD,mBAAS,IALF,mBAKpCwB,EALoC,KAKxB2B,EALwB,KAO3C,OACI,yBAAK7C,UAAU,mBACX,wBAAIA,UAAU,UAAd,WACA,wBAAIA,UAAU,SACTyC,EAAQrC,KAAI,SAAA0C,GAAM,OACf,kBAAC,IAAMC,SAAP,CAAgBzC,IAAKwC,EAAO3C,IACxB,wBAAIA,GAAI2C,EAAO3C,GAAIH,UAAU,4BAA4BS,QAAS,SAACgB,GAAD,OActF,SAA4BC,GACxB,IAAMsB,EAAmBtB,EAAMC,OAAOxB,GACtCwC,EAAkBK,GAClB,IAAMF,EAASL,EAAQxC,QAAO,SAAA6C,GAAM,OAAIA,EAAO3C,MAAQ6C,KAAkB,GAIzE,OAHAJ,EAAUE,EAAOf,QACjBE,GAAkB,GAClBY,EAAcC,EAAOG,MACdD,EArBkFE,CAAmBzB,KAEvFqB,EAAOG,WAMxB,kBAACnB,EAAD,CAAYZ,WAAYA,EAAYa,OAAQA,EAAQzB,IAAKoC,EAAgBV,eAAgBA,EAC7EC,kBAAmBA,KCtB5B,SAASkB,IAAO,IAAD,EAEEzD,mBAAS,IAFX,mBAErB+C,EAFqB,KAEZW,EAFY,KA6B1B,OAzBArD,qBAAU,WACNsD,QAAQC,IAAI,CACRC,MAAM,8CAA8CC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,UACxEH,MAAM,+CAA+CC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,UACzEH,MAAM,+CAA+CC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,YAExEF,MAAK,YAAgC,IAAD,mBAA7Bf,EAA6B,KAApBV,EAAoB,KAAZ7C,EAAY,KAC3ByE,EAAalB,EAAQrC,KAAI,SAAA0C,GAC3B,OAAO,2BACAA,GADP,IAEIf,OAAQA,EAAO9B,QAAO,SAAAqC,GAAK,OAAIA,EAAMsB,SAAWd,EAAO3C,MAAIC,KAAI,SAACkC,GAC5D,OAAO,2BACAA,GADP,IAEIpD,OAAQA,EAAOe,QAAO,SAAAC,GAAK,OAAIA,EAAM2D,UAAYvB,EAAMnC,gBAKvEiD,EAAWO,MAEdG,OAAM,SAACC,GACJC,QAAQC,IAAIF,QAErB,IAGC,oCACI,kBAAC,EAAD,MACA,8BACI,kBAACvB,EAAD,CAAaC,QAASA,KAG1B,gCACI,6DCpChByB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACjB,EAAD,OAEFkB,SAASC,eAAe,W","file":"static/js/main.8bdd3d5f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './jumbotron.css';\r\n\r\nconst Jumbotron = () => {\r\n    return (\r\n        <header>\r\n            <h1>Photo Gallery</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport './carousel.css';\r\n\r\nexport default function Carousel({photos, showCarousel, setShowCarousel, currentPicture, albumPictureIndex}) {\r\n\r\n    let numCurrentPicture = +currentPicture;\r\n    let numAlbumPictureIndex = parseInt(albumPictureIndex) + 1;\r\n    let [currentIndex, setCurrentIndex] = useState(numCurrentPicture);\r\n    let [currentPictureIndex, setCurrentPictureIndex] = useState(numAlbumPictureIndex)\r\n\r\n    useEffect(() => {\r\n        setCurrentIndex(numCurrentPicture);\r\n        setCurrentPictureIndex(numAlbumPictureIndex);\r\n    }, [numCurrentPicture, numAlbumPictureIndex]);\r\n\r\n    return showCarousel && (\r\n        <>\r\n            <div className=\"slideshow-container\">\r\n                {\r\n                    photos.filter(photo => photo.id === currentIndex).map(\r\n                        item =>\r\n                            <figure id={item.id} key={item.id} className=\"current-slide\">\r\n                                <div className=\"number\">{currentPictureIndex} / {photos.length}</div>\r\n                                <button type='button' className='close' onClick={() => setShowCarousel(false)}>X\r\n                                </button>\r\n                                <button type='button' className=\"prev\" onClick={previousPicture}>&#10094;</button>\r\n                                <button type='button' className=\"next\" onClick={nextPicture}>&#10095;</button>\r\n                                <img src={item.url} alt={item.id}/>\r\n                                <figcaption>{item.title}</figcaption>\r\n                            </figure>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    function nextPicture() {\r\n        const photosCount = photos.length;\r\n        currentIndex++;\r\n        currentPictureIndex++;\r\n        if (currentPictureIndex > photosCount) {\r\n            setCurrentIndex(currentIndex = photos[0].id);\r\n            setCurrentPictureIndex(currentPictureIndex = 1);\r\n        }\r\n        setCurrentIndex(currentIndex);\r\n        setCurrentPictureIndex(currentPictureIndex);\r\n    }\r\n\r\n    function previousPicture() {\r\n        const photosCount = photos.length;\r\n        currentIndex--;\r\n        currentPictureIndex--;\r\n        if (currentPictureIndex === 0) {\r\n            setCurrentIndex(currentIndex = photos[photosCount - 1].id);\r\n            setCurrentPictureIndex(currentPictureIndex = photosCount);\r\n        }\r\n        setCurrentIndex(currentIndex);\r\n        setCurrentPictureIndex(currentPictureIndex);\r\n    }\r\n\r\n}","import React, {useState} from \"react\";\r\nimport './album.css';\r\nimport Carousel from \"../carousel/carousel\";\r\n\r\nexport default function Album({photos, authorName, albumTitle, showAlbum, setShowAlbum}) {\r\n\r\n    const [showCarousel, setShowCarousel] = useState(false);\r\n    const [currentPicture, setCurrentPicture] = useState(0);\r\n    const [albumPictureIndex, setAlbumPictureIndex] = useState(0);\r\n\r\n    return showAlbum && (\r\n        <div id='album' className='album-container'>\r\n            <button id='btn-back' type=\"button\" onClick={() => {\r\n                setShowAlbum(false)\r\n            }}>\r\n                Back to Albums list\r\n            </button>\r\n\r\n            <h3 id={authorName} className='author'>\r\n                <u>Author:</u>&nbsp;{authorName}\r\n            </h3>\r\n            <h4 id={albumTitle}>\r\n                <u>Album:</u>&nbsp;{albumTitle}\r\n            </h4>\r\n\r\n            <ul className='album'>\r\n                {photos.map((photo, index) => (\r\n                    <li id={photo.id} key={'btn_' + photo.id}\r\n                        onClick={(e) => selectedPicture(e)\r\n                        }>\r\n                        <figure className='album-picture'>\r\n                            <img src={photo.thumbnailUrl} id={photo.id} alt={index}/>\r\n                            <figcaption><small>{photo.title}</small></figcaption>\r\n                        </figure>\r\n                    </li>\r\n                ))\r\n                }\r\n            </ul>\r\n            <Carousel photos={photos} showCarousel={showCarousel} setShowCarousel={setShowCarousel}\r\n                      currentPicture={currentPicture}\r\n                      albumPictureIndex={albumPictureIndex}/>\r\n        </div>\r\n    );\r\n\r\n    function selectedPicture(event) {\r\n        const currentPicture = event.target.id;\r\n        const albumPictureIndex = event.target.alt;\r\n        setShowCarousel(true);\r\n        setCurrentPicture(currentPicture);\r\n        setAlbumPictureIndex(albumPictureIndex);\r\n        return {currentPicture, albumPictureIndex};\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport './albumsList.css';\r\nimport Album from \"../album/album\";\r\n\r\nexport default function AlbumsList({authorName, albums, showAlbumsList, setShowAlbumsList}) {\r\n\r\n    const [showAlbum, setShowAlbum] = useState(false);\r\n    const [selectedAlbum, setSelectedAlbum] = useState(0);\r\n    const [photos, setPhotos] = useState([]);\r\n    const [albumTitle, setAlbumTitle] = useState('');\r\n\r\n    return showAlbumsList && (\r\n        <div id='albums-list' className='album-container'>\r\n            <button id='btn-back' type=\"button\" onClick={() => {\r\n                setShowAlbumsList(false)\r\n            }}>\r\n                Close\r\n            </button>\r\n\r\n            <h3 id={authorName} className='author'>\r\n                <u>Author:</u>&nbsp;{authorName}\r\n            </h3>\r\n\r\n            <ul id='album-list' className='album'>\r\n                {albums.map(album => (\r\n                    <li key={album.id} id={album.id}>\r\n                        <figure className='album-picture'>\r\n                            <img id={album.id} src={album.photos[0].thumbnailUrl} alt={album.photos[0].id}\r\n                                 onClick={selectAlbum}/>\r\n                            <figcaption>\r\n                                [Album]:&nbsp; {album.title}\r\n                                <p>{album.photos.length} pictures</p>\r\n                            </figcaption>\r\n                        </figure>\r\n                    </li>\r\n                ))\r\n                }\r\n            </ul>\r\n\r\n            <Album photos={photos} authorName={authorName} albumTitle={albumTitle} showAlbum={showAlbum}\r\n                   setShowAlbum={setShowAlbum}\r\n                   selectedAlbum={selectedAlbum}/>\r\n        </div>\r\n    );\r\n\r\n    function selectAlbum(event) {\r\n        const selectedAlbum = event.target.id;\r\n        setShowAlbum(true);\r\n        setSelectedAlbum(selectedAlbum);\r\n        const album = albums.filter(album => album.id === +selectedAlbum)[0];\r\n        setPhotos(album.photos);\r\n        setAlbumTitle(album.title);\r\n        return selectedAlbum;\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport './authorsList.css';\r\nimport AlbumsList from \"../authorAlbumsList/albumsList\";\r\n\r\nexport default function AuthorsList({authors}) {\r\n\r\n    const [showAlbumsList, setShowAlbumsList] = useState(false);\r\n    const [selectedAuthor, setSelectedAuthor] = useState(0);\r\n    const [albums, setAlbums] = useState([]);\r\n    const [authorName, setAuthorName] = useState('');\r\n\r\n    return (\r\n        <div className='album-container'>\r\n            <h3 className='author'>Authors</h3>\r\n            <ul className='album'>\r\n                {authors.map(author => (\r\n                    <React.Fragment key={author.id}>\r\n                        <li id={author.id} className='author-list album-picture' onClick={(e) => handleTargetAuthor(e)\r\n                        }>\r\n                            {author.name}\r\n                        </li>\r\n                    </React.Fragment>\r\n                ))}\r\n            </ul>\r\n\r\n            <AlbumsList authorName={authorName} albums={albums} key={selectedAuthor} showAlbumsList={showAlbumsList}\r\n                        setShowAlbumsList={setShowAlbumsList}\r\n            />\r\n        </div>\r\n    );\r\n\r\n    function handleTargetAuthor(event) {\r\n        const selectedAuthorId = event.target.id;\r\n        setSelectedAuthor(selectedAuthorId);\r\n        const author = authors.filter(author => author.id === +selectedAuthorId)[0];\r\n        setAlbums(author.albums);\r\n        setShowAlbumsList(true);\r\n        setAuthorName(author.name)\r\n        return selectedAuthorId;\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Jumbotron from './components/jumbotron/jumbotron';\r\nimport AuthorsList from './components/authorsList/authorsList';\r\n\r\nexport default function App() {\r\n\r\n    let [authors, setAuthors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            fetch(\"https://jsonplaceholder.typicode.com/users\").then(value => value.json()),\r\n            fetch(\"https://jsonplaceholder.typicode.com/albums\").then(value => value.json()),\r\n            fetch(\"https://jsonplaceholder.typicode.com/photos\").then(value => value.json())\r\n        ])\r\n            .then(([authors, albums, photos]) => {\r\n                const newAuthors = authors.map(author => {\r\n                    return {\r\n                        ...author,\r\n                        albums: albums.filter(album => album.userId === author.id).map((album) => {\r\n                            return {\r\n                                ...album,\r\n                                photos: photos.filter(photo => photo.albumId === album.id)\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n                setAuthors(newAuthors);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Jumbotron/>\r\n            <main>\r\n                <AuthorsList authors={authors}\r\n                />\r\n            </main>\r\n            <footer>\r\n                <small>Irina Plaksina &copy; 2020</small>\r\n            </footer>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}